services:
  broker:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:9092
      LOGGING_LEVEL_COM_PROVECTUS: INFO
    depends_on:
      - broker
    ports:
      - "8080:8080"

  mysql:
    image: mysql
    container_name: mysql
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: userdb
      MYSQL_USER: user-srv
      MYSQL_PASSWORD: test
    ports:
      - "4500:3306"

  user-srv:
    container_name: user-srv
    build:
      dockerfile: ./apps/user-service/Dockerfile
      context: .
    ports:
      - "4201:4201"
      - "4301:4301"
    volumes:
      - ./apps:/app/apps
      - ./libs:/app/libs
      - ./dist:/app/dist
      - /app/node_modules
    environment:
      PORT: 4201
      BROKER_PORT: 9092
    depends_on:
      - mysql
      - broker

  game-srv:
    container_name: game-srv
    build:
      dockerfile: ./apps/game-service/Dockerfile
      context: .
    ports:
      - "4202:4202"
      - "4302:4302"
    volumes:
      - ./apps:/app/apps
      - ./libs:/app/libs
      - ./dist:/app/dist
      - /app/node_modules
    environment:
      PORT: 4202

  notification-srv:
    container_name: notification-srv
    build:
      dockerfile: ./apps/notification-service/Dockerfile
      context: .
    ports:
      - "4303:4303"
    volumes:
      - ./apps:/app/apps
      - ./libs:/app/libs
      - ./dist:/app/dist
      - /app/node_modules
    env_file:
      - .env
    environment:
      BROKER_PORT: 9092
    depends_on:
      - broker

  lobby-srv:
    container_name: lobby-srv
    build:
      dockerfile: ./apps/lobby-service/Dockerfile
      context: .
    ports:
      - "4204:4204"
      - "4304:4304"
    volumes:
      - ./apps:/app/apps
      - ./libs:/app/libs
      - ./dist:/app/dist
      - /app/node_modules
    env_file:
      - .env
    environment:
      PORT: 4204

  chess-ui-builder:
    container_name: chess-ui-builder
    build:
      dockerfile: ./apps/chess-ui/Dockerfile
      context: .
    ports:
      - "4200:4200"
    volumes:
      - ./apps:/app/apps
      - ./libs:/app/libs
      - ./dist:/app/dist
      - /app/node_modules
    environment:
      NODE_ENV: development

#  nginx:
#    container_name: nginx
#    build:
#      dockerfile: nginx/Dockerfile
#      context: .
#    ports:
#      - "4200:80"
#    volumes:
#      - ./dist/apps/chess-ui/browser:/usr/share/nginx/html
#    depends_on:
#      - chess-ui-builder

volumes:
  mysql-data:
